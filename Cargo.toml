[package]
name = "stringzilla"
version = "4.2.2"
authors = ["Ash Vardanian <1983160+ashvardanian@users.noreply.github.com>"]
description = "Search, hash, sort, fingerprint, and fuzzy-match strings faster via SWAR, SIMD, and GPGPU"
edition = "2021"
license = "Apache-2.0"
publish = true
repository = "https://github.com/ashvardanian/stringzilla"
documentation = "https://docs.rs/stringzilla"
homepage = "https://ashvardanian.com/posts/stringzilla/"
keywords = ["simd", "search", "retrieval", "hash", "sort"]
categories = [
    "text-processing",
    "hardware-support",
    "no-std",
    "wasm",
    "external-ffi-bindings",
]
include = ["rust/**", "c/**", "include/**", "fork_union/include/**", "build.rs"]

[lib]
name = "stringzilla"
path = "rust/lib.rs"

[features]
default = ["std"]
std = []
cpus = [
    "std",            # std is required for multi-threaded backend
    "allocator-api2",
    "stringtape",
] # Multi-threaded CPU backend (StringZillas)
cuda = ["std", "cpus"] # CUDA GPU backend (includes multi-threaded CPU backend)
rocm = ["std", "cpus"] # ROCm GPU backend (includes multi-threaded CPU backend)

[dependencies]
allocator-api2 = { version = "0.3.0", optional = true }
stringtape = { version = "2.0.3", optional = true }

[build-dependencies]
cc = "1.2.40"

[lints.clippy]
# Catch platform-specific type issues like `c_char` differences
cast-sign-loss = "warn"
# Catch potential FFI issues
not-unsafe-ptr-arg-deref = "warn"
# Catch undefined behavior with pointers
invalid_null_ptr_usage = "warn"
# Catch transmute issues
transmute_ptr_to_ptr = "warn"

[lints.rust]
# Catch ABI mismatches in FFI
improper_ctypes = "warn"
# Catch platform-specific code that might fail on other targets
unexpected_cfgs = "warn"
